process TEST =
{
    
    service = MessageLogger {
	untracked vstring destinations = { "cout" }
	untracked vstring debugModules = { "*" }
	untracked PSet debug.txt = {
	    untracked string threshold = "DEBUG"
	}
    }
    
    source = EmptyIOVSource {
	string timetype = "runnumber"
	uint64 firstValue = 100000000000
	uint64 lastValue =  100000000000
	uint64 interval = 1
    }
    
# input conditions from DB/file or from trivial 

    include "CondCore/DBCommon/data/CondDBCommon.cfi"

# to write in sqlite
    replace CondDBCommon.connect = "sqlite_file:DB.db"    
    replace CondDBCommon.catalog = "file:PoolFileCatalog_DB.xml"
    replace CondDBCommon.timetype = "runnumber"

    es_source = PoolDBESSource 
    { 
	using CondDBCommon
	VPSet toGet=
	{
	    {
		string record = "EcalPedestalsRcd"
		string tag ="EcalPedestals_o2o"
	    }
	}
     }    

# use this when you want to create a new tag
# so that the first run is checked against the trivial condition retriever
# for empty channels

#    es_source = EcalTrivialConditionRetriever {
#	untracked bool producedEcalPedestals = true
#    }
#    es_prefer = PoolDBESSource{}
  

# output DB


# to write into int2r_orcoff
#    replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_ECAL"
#    replace CondDBCommon.catalog = "relationalcatalog_oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
#    replace CondDBCommon.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"    

# to write into ecal_h4_test
#    replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_ECAL_OFF_TEST"
#    replace CondDBCommon.catalog = "relationalcatalog_oracle://cms_orcoff_int2r/CMS_ECAL_OFF_TEST"
#    replace CondDBCommon.DBParameters.authenticationPath="/u1/fra/CMSSW_1_5_0_pre5/src/CondTools/Ecal/db_auth"    

# to write into ecal_h4_test
#    replace CondDBCommon.connect = "oracle://ecalh4db/COND04"
#    replace CondDBCommon.catalog = "relationalcatalog_oracle://ecalh4db/COND04"
#    replace CondDBCommon.DBParameters.authenticationPath="/u1/fra/CMSSW_1_5_0_pre5/src/CondTools/Ecal/db_auth"    

    service = PoolDBOutputService
    {
        using CondDBCommon
	VPSet toPut = { 
            { 
		string record = "EcalPedestalsRcd" 
		string tag = "EcalPedestals_o2o" 
            }
          }

    }

    module dbCopy = EcalPedestalTransfer
    {
        string timetype = "runnumber"
        string firstRun = "100"
	string lastRun = "120"
	string OnlineDBSID ="omds"
	string OnlineDBUser = "cms_ecal_cond"
	string OnlineDBPassword = "oracms_ecal_cond"

        VPSet toCopy=
        {
           {
               string container = "EcalPedestals"
               string record = "EcalPedestalsRcd"
           }
        }
    }

   path p = { dbCopy }

}
